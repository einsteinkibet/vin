# Generated by Django 5.2.3 on 2025-09-05 18:56

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('vin', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='paymenttransaction',
            name='payment_gateway',
            field=models.CharField(default='paystack', max_length=20),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='payment_reference',
            field=models.CharField(default='temp_ref_001', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='bmwvehicle',
            name='body_type',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='bmwvehicle',
            name='drive_type',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='bmwvehicle',
            name='engine_code',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='bmwvehicle',
            name='fuel_type',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='bmwvehicle',
            name='series',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='bmwvehicle',
            name='transmission_type',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.CreateModel(
            name='MarketValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('valuation_date', models.DateField()),
                ('source', models.CharField(max_length=100)),
                ('retail_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('trade_in_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('private_party_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('mileage_adjustment', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], max_length=20)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='market_values', to='vin.bmwvehicle')),
            ],
            options={
                'db_table': 'market_values',
                'ordering': ['-valuation_date'],
            },
        ),
        migrations.CreateModel(
            name='OwnershipHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('owner_number', models.IntegerField()),
                ('purchase_date', models.DateField()),
                ('sale_date', models.DateField(blank=True, null=True)),
                ('owner_type', models.CharField(choices=[('personal', 'Personal'), ('lease', 'Lease'), ('rental', 'Rental'), ('commercial', 'Commercial'), ('dealer', 'Dealer')], max_length=20)),
                ('owner_location', models.CharField(blank=True, max_length=100, null=True)),
                ('miles_at_purchase', models.IntegerField(blank=True, null=True)),
                ('miles_at_sale', models.IntegerField(blank=True, null=True)),
                ('source', models.CharField(max_length=100)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owners', to='vin.bmwvehicle')),
            ],
            options={
                'db_table': 'ownership_history',
                'ordering': ['owner_number'],
            },
        ),
        migrations.CreateModel(
            name='TitleHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title_date', models.DateField()),
                ('title_type', models.CharField(choices=[('clean', 'Clean'), ('salvage', 'Salvage'), ('rebuilt', 'Rebuilt'), ('flood', 'Flood'), ('lemon', 'Lemon Law'), ('junk', 'Junk')], max_length=20)),
                ('title_state', models.CharField(max_length=2)),
                ('lien_holder', models.CharField(blank=True, max_length=200, null=True)),
                ('odometer_reading', models.IntegerField()),
                ('source', models.CharField(max_length=100)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='titles', to='vin.bmwvehicle')),
            ],
            options={
                'db_table': 'title_history',
                'ordering': ['-title_date'],
            },
        ),
        migrations.CreateModel(
            name='RecallInformation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recall_id', models.CharField(max_length=50)),
                ('recall_date', models.DateField()),
                ('component', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('consequence', models.TextField()),
                ('remedy', models.TextField()),
                ('nhtsa_campaign_number', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('completed', 'Completed')], max_length=20)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recalls', to='vin.bmwvehicle')),
            ],
            options={
                'db_table': 'recall_information',
                'indexes': [models.Index(fields=['vehicle', 'recall_date'], name='recall_info_vehicle_64a792_idx')],
            },
        ),
        migrations.CreateModel(
            name='ServiceHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_date', models.DateField()),
                ('service_type', models.CharField(choices=[('oil', 'Oil Change'), ('brakes', 'Brake Service'), ('tires', 'Tire Replacement'), ('battery', 'Battery Replacement'), ('transmission', 'Transmission Service'), ('coolant', 'Coolant Flush'), ('timing_belt', 'Timing Belt'), ('recall', 'Recall Service'), ('other', 'Other Service')], max_length=20)),
                ('service_description', models.TextField()),
                ('mileage', models.IntegerField()),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('service_center', models.CharField(blank=True, max_length=200, null=True)),
                ('warranty_work', models.BooleanField(default=False)),
                ('receipts_available', models.BooleanField(default=False)),
                ('source', models.CharField(max_length=100)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='vin.bmwvehicle')),
            ],
            options={
                'db_table': 'service_history',
                'indexes': [models.Index(fields=['vehicle', 'service_date'], name='service_his_vehicle_ffad61_idx')],
            },
        ),
        migrations.CreateModel(
            name='VehicleAccident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('accident_date', models.DateField()),
                ('accident_type', models.CharField(choices=[('collision', 'Collision'), ('flood', 'Flood Damage'), ('fire', 'Fire Damage'), ('hail', 'Hail Damage'), ('vandalism', 'Vandalism'), ('other', 'Other')], max_length=20)),
                ('severity', models.CharField(choices=[('minor', 'Minor'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('total', 'Total Loss')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('estimated_damage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('airbags_deployed', models.BooleanField(default=False)),
                ('police_report', models.BooleanField(default=False)),
                ('insurance_claim', models.BooleanField(default=False)),
                ('source', models.CharField(max_length=100)),
                ('reported_date', models.DateTimeField(auto_now_add=True)),
                ('verified', models.BooleanField(default=False)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accidents', to='vin.bmwvehicle')),
            ],
            options={
                'db_table': 'vehicle_accidents',
                'indexes': [models.Index(fields=['vehicle', 'accident_date'], name='vehicle_acc_vehicle_5c2cf6_idx')],
            },
        ),
    ]
